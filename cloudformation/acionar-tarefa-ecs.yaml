AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ecsClusterName:
    Type: String
    Description: variable ecs cluster name
  ecsTaskDefinition:
    Type: String
    Description: variable task definition name
  ecsTaskSubnets:
    Type: String
    Description: variable list of subnets ids
  ecsSecurityGroups:
    Type: String
    Description: variable list of security groups ids
Resources:
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ecsTaskExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  AcionarTarefaEcsLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: otp-lambdas
        S3Key: acionar-tarefa-ecs.zip
      FunctionName: acionar-tarefa-ecs
      Handler: index.handler
      Role: !GetAtt AcionarTarefaEcsRole.Arn
      Runtime: nodejs14.x
      Environment:
        Variables:
          AWS_SQS_URL_ORDERS_SEND: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/ordens-processadas'
          ECS_CLUSTER_NAME: !Ref ecsClusterName
          ECS_TASK_DEFINITION: !Ref ecsTaskDefinition
          ECS_TASK_SUBNETS: !Ref ecsTaskSubnets
          ECS_SECURITY_GROUPS: !Ref ecsSecurityGroups
  AcionarTarefaEcsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: 'ReceberMensagemSQSPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'sqs:ReceiveMessage'
                  - 'sqs:DeleteMessage'
                  - 'sqs:GetQueueAttributes'
                Resource:
                  - !Sub 'arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:ordens-geradas' # Substitua pelo URL da sua fila de origem
        - PolicyName: 'AcionarTarefaEcsPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                Resource: "*"
        - PolicyName: 'AssumeRoleEcsTaskExecutionRolePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole'
  ProcessQueueEvent:
    Type: 'AWS::Lambda::EventSourceMapping'
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !Sub 'arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:ordens-geradas'
      FunctionName: !Ref AcionarTarefaEcsLambda